import src.YVM;


public class YVMasm extends YVM{
	
	
	public YVMasm(String nom){

	}
	
	@Override
	public void iadd() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("add ax,bx");
		System.out.println("push ax");
	}

	@Override
	public void isub() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("sub ax,bx");
		System.out.println("push ax");
	}

	@Override
	public void imul() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("imul bx");
		System.out.println("push ax");
	}

	@Override
	public void idiv() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("cwd");
		System.out.println("idiv bx");
		System.out.println("push ax");
	}

	@Override
	public void inot() {
		System.out.println("pop ax");
		System.out.println("not ax");
		System.out.println("push ax");
	}

	@Override
	public void ineg() {
		System.out.println("pop ax");
		System.out.println("neg ax");
		System.out.println("push ax");
	}

	@Override
	public void ior() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("or ax,bx");
		System.out.println("push ax");
	}

	@Override
	public void iand() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("and ax,bx");
		System.out.println("push ax");
	}

	@Override
	public void iinf() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("cmp ax,bx");
		System.out.println("jge $+6");
		System.out.println("push -1");
		System.out.println("jump $+4");
		System.out.println("push 0");
	}

	@Override
	public void isup() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("cmp ax,bx");
		System.out.println("jle $+6");
		System.out.println("push -1");
		System.out.println("jump $+4");
		System.out.println("push 0");
	}

	@Override
	public void iinfegal() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("cmp ax,bx");
		System.out.println("jg $+6");
		System.out.println("push -1");
		System.out.println("jump $+4");
		System.out.println("push 0");
	}

	@Override
	public void isupegal() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("cmp ax,bx");
		System.out.println("jl $+6");
		System.out.println("push -1");
		System.out.println("jump $+4");
		System.out.println("push 0");
	}

	@Override
	public void iegal() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("cmp ax,bx");
		System.out.println("jne $+6");
		System.out.println("push -1");
		System.out.println("jump $+4");
		System.out.println("push 0");
	}

	@Override
	public void idiff() {
		System.out.println("pop bx");
		System.out.println("pop ax");
		System.out.println("cmp ax,bx");
		System.out.println("je $+6");
		System.out.println("push -1");
		System.out.println("jmp $+4");
		System.out.println("push 0");
	}

	@Override
	public void iload(int offset) {
		System.out.println("push word ptr[bp"+offset+"]");
	}

	@Override
	public void istore(int offset) {
		System.out.println("pop ax");
		System.out.println("mov word ptr[bp"+offset+"],ax");
	}

	@Override
	public void iconst(int constante) {
		System.out.println("push "+constante);
	}

	@Override
	public void ifeq(String etiquette) {
		System.out.println("pop ax");
		System.out.println("cmp ax,0");
		System.out.println("je "+etiquette);
	}
	
	public void iffaux(String etiquette){
		System.out.println("pop ax");
		System.out.println("cmp ax,0");
		System.out.println("jne "+etiquette);
	}

	@Override
	public void jump(String etiquette) {
		System.out.println("jmp "+etiquette);
	}
	
	public void entete(){
		System.out.println(".model SMALL");
		System.out.println(".586");
		System.out.println(".CODE");
		System.out.println("debut :");
		System.out.println("	STARUPCODE");
	}

	@Override
	public void ouvrePrinc(int taille) {
		System.out.println("mov bp,sp");
	}
	
	@Override
	public void queue(){
		System.out.println("nop");
		System.out.println("exitcode");
		System.out.println("end debut");
	}

}
